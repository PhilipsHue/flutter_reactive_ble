analyzer:
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  exclude:
    - lib/**/*.g.dart
    - lib/src/generated/**
    - lib/**/*.gen.dart
    - test/**.g.dart
    - test/**/*.g.dart
    - test/**/*.mocks.dart

linter:
  rules:
    # Errors
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_returning_null_for_future
    - avoid_slow_async_io
    - avoid_types_as_parameter_names
    - cancel_subscriptions
    - close_sinks
    # - comment_references -- DISABLED: collision with mockito generation
    - control_flow_in_finally
    # - diagnostic_describe_all_properties -- DISABLED: experimental feature
    - empty_statements
    - hash_and_equals
    - invariant_booleans
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - prefer_void_to_null
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_statements
    - unrelated_type_equality_checks
    - valid_regexps
    # Style checks
    - always_declare_return_types
    # - always_put_control_body_on_new_line -- DISABLED: DARTFMT INCOMPATIBLE
    - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters
    # - always_specify_types -- DISABLED: LEADS TO FLUFFY CODE
    - annotate_overrides
    # - avoid_annotating_with_dynamic -- DISABLED: Gives false positives for function arguments where it is needed
    # - avoid_as
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_field_initializers_in_const_classes
    # - avoid_function_literals_in_foreach_calls  -- DISABLED: forEach is often clearer than for-loop
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_js_rounded_ints
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null
    - avoid_returning_null_for_void
    - avoid_returning_this
    # - avoid_setters_without_getters -- DISABLED: Sometimes it makes sense to have write-only member
    # - avoid_shadowing_type_parameters -- TODO: Enable new option
    - avoid_single_cascade_in_expression_statements
    # - avoid_types_on_closure_parameters -- DISABLED: INCOMPATIBLE WITH IMPLICIT TYPE CASTS DISABLED
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_types
    - cascade_invocations
    - constant_identifier_names
    # - curly_braces_in_flow_control_structures -- DISABLED: WE DO NOT WANT THIS
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - file_names
    # - flutter_style_todos -- DISABLED: TOO MUCH?
    - implementation_imports
    - join_return_with_assignment
    - library_names
    - library_prefixes
    # - lines_longer_than_80_chars -- DISABLED: WE DO NOT WANT THIS
    - non_constant_identifier_names
    - null_closures
    - omit_local_variable_types
    # - one_member_abstracts -- DISABLED: OBSTRUCTS OO DESIGN
    - only_throw_errors
    - overridden_fields
    - package_api_docs
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    # - prefer_asserts_with_message -- DISABLED: BOOLEAN CONDITIONS ARE GOOD ENOUGH
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    # - prefer_double_quotes -- DISABLED: This rule is to be supported in a future Dart release
    - prefer_equal_for_default_values
    - prefer_expression_function_bodies
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_initializing_formals
    - prefer_inlined_adds
    # - prefer_int_literals -- DISABLED: ADDED VALUE IS UNCLEAR
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_operators
    # - prefer_single_quotes -- DISABLED: ADDED VALUE IS UNCLEAR
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    # - provide_deprecation_messages -- DISABLED: This rule is to be supported in a future Dart release
    # - public_member_api_docs
    - recursive_getters
    - slash_for_doc_comments
    # - sort_child_properties_last -- This rule is to be supported in a future Dart release
    # - sort_constructors_first -- DISABLED: ADDED VALUE IS UNCLEAR
    # - sort_unnamed_constructors_first -- DISABLED: ADDED VALUE IS UNCLEAR
    # - type_annotate_public_apis -- DISABLED: ADDED VALUE IS UNCLEAR
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_this
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_string_buffers
    - use_to_and_as_if_applicable
    - void_checks
    # Pub Rules
    - package_names
    - sort_pub_dependencies
